{"version":3,"sources":["components/Card/index.js","components/Search/index.js","App.js","index.js"],"names":["Card","image","tags","split","className","src","webformatURL","alt","user","views","downloads","likes","map","tag","index","key","Search","searchText","useState","text","setText","onSubmit","e","preventDefault","onChange","target","value","type","placeholder","App","images","setImages","loading","setLoading","term","setTerm","useEffect","fetch","then","res","json","data","hits","catch","err","console","log","legth","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8KAuCeA,EArCF,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACNC,EAAOD,EAAMC,KAAKC,MAAM,CAAC,MAE/B,OACI,yBAAKC,UAAU,8CACjB,yBAAKC,IAAKJ,EAAMK,aAAcC,IAAI,GAAGH,UAAU,WAC/C,yBAAKA,UAAU,aACb,yBAAKA,UAAU,0CAAf,YACYH,EAAMO,MAElB,4BACE,4BACE,2CACCP,EAAMQ,OAET,4BACE,+CACCR,EAAMS,WAET,4BACE,2CACCT,EAAMU,SAIb,yBAAKP,UAAU,aACZF,EAAKU,KAAI,SAACC,EAAKC,GAAN,OACN,0BAAMC,IAAKD,EAAOV,UAAU,+FAA5B,IAEIS,SCFDG,EA3BA,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAAiB,EACRC,mBAAS,IADD,mBACxBC,EADwB,KAClBC,EADkB,KAS/B,OACI,yBAAKhB,UAAU,kDACX,0BAAMiB,SARG,SAACC,GACdA,EAAEC,iBAEFN,EAAWE,IAKmBf,UAAU,mBAChC,yBAAKA,UAAU,8DACX,2BAAOoB,SAAU,SAAAF,GAAC,OAAIF,EAAQE,EAAEG,OAAOC,QAAQtB,UAAU,qHAEzDuB,KAAK,OAAOC,YAAY,0BACxB,4BAAQxB,UAAU,wIAAlB,cCkBLyB,MAhCf,WAAgB,IAAD,EACeX,mBAAS,IADxB,mBACNY,EADM,KACEC,EADF,OAEiBb,oBAAS,GAF1B,mBAENc,EAFM,KAEGC,EAFH,OAGWf,mBAAS,IAHpB,mBAGNgB,EAHM,KAGAC,EAHA,KAgBb,OAVAC,qBAAU,WACRC,MAAM,qEAAD,OAAsEH,EAAtE,sBACJI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJV,EAAUU,EAAKC,MACfT,GAAW,MAEZU,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QACzB,CAACV,IAGF,yBAAK9B,UAAU,qBACb,kBAAC,EAAD,CAAQa,WAAY,SAACE,GAAD,OAAUgB,EAAQhB,OAEtCa,GAA4B,IAAjBF,EAAOiB,OAAe,wBAAI3C,UAAU,uCAAd,mBAGhC4B,EAAU,wBAAI5B,UAAU,sCAAd,WAAkE,yBAAKA,UAAU,0BACzF0B,EAAOlB,KAAI,SAAAX,GAAK,OACf,kBAAC,EAAD,CAAMc,IAAKd,EAAM+C,GAAI/C,MAAOA,UCxBtCgD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.496bfaef.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ image }) => {\r\n    const tags = image.tags.split([',']);\r\n    \r\n    return (\r\n        <div className=\"max-w-sm rounded overflow-hidden shadow-lg\" >\r\n      <img src={image.webformatURL} alt=\"\" className=\"w-full\" />\r\n      <div className=\"px-6 py-4\"> \r\n        <div className=\"font-bold text-purple-500 text-xl mb-2\"> \r\n          Photo by {image.user}\r\n        </div>\r\n        <ul>\r\n          <li>\r\n            <strong>Views: </strong>\r\n            {image.views}\r\n          </li>\r\n          <li>\r\n            <strong>Downloads: </strong>\r\n            {image.downloads}\r\n          </li>\r\n          <li>\r\n            <strong>Likes: </strong>\r\n            {image.likes}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div className=\"px-6 py-4\">\r\n        {tags.map((tag, index) => (\r\n            <span key={index} className=\"inline-block bg-gray-200 rounded-full \r\n            px-3 py-1 text-sm font-semibold text-gray-700 mr-2\">\r\n              #{tag}\r\n            </span>\r\n        ))}\r\n      </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Card;\r\n","import React, { useState } from 'react';\r\n\r\nconst Search = ({ searchText }) => {\r\n    const [text, setText] =useState('');\r\n    \r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        searchText(text);\r\n    }\r\n\r\n    return (\r\n        <div className=\"max-w-sm rounded overflow-hidden my-10 mx-auto\">\r\n            <form onSubmit={onSubmit} className=\"w-full max-w-sm\">\r\n                <div className=\"flex items-center border-b border-b-2 border-teal-500 py-2\">\r\n                    <input onChange={e => setText(e.target.value)} className=\"appearance-none bg-transparent border-none \r\n                    w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none\"\r\n                    type=\"text\" placeholder=\"Search Image Term ...\" />\r\n                    <button className=\"flex-shrink-0 bg-teal-500 hover:bg-teal-700 \r\n                    border-teal-500 hover:border-teal-700 text-sm border-4 text-white\r\n                    py-1 px-2 rounded\">\r\n                        Search\r\n                    </button>\r\n                </div>\r\n            </form>            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search;\r\n","import React, {useState, useEffect } from 'react';\nimport Card from './components/Card';\nimport Search from './components/Search';\n\nfunction App() {\n  const [images, setImages] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [term, setTerm] = useState('');\n\n\n  useEffect(() => {\n    fetch(`https://pixabay.com/api/?key=16023096-1f90b67915799ac5fb7d24bad&q=${term}&image_type=photo`)\n    .then(res => res.json())\n    .then(data => {\n      setImages(data.hits);\n      setLoading(false);\n    })\n    .catch(err => console.log(err))\n  }, [term])\n  \n  return (\n    <div className=\"container mx-auto\">\n      <Search searchText={(text) => setTerm(text)} />\n\n    {!loading && images.legth === 0 && <h1 className=\"text-5xl \n    text-center mx-auto mt-32\">No Images found</h1> }\n\n      {loading ? <h1 className=\"text-6xl text-center mx-auto mt-32\">Loading</h1> : <div className=\"grid grid-cols-3 gap-4\">\n        {images.map(image=> \n          <Card key={image.id} image={image}/>\n        )}\n      </div>}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/main.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}